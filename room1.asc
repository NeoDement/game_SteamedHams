



// room script file

function room_FirstLoad()
{ 
  //chalmers doorbell timer
  SetTimer(1, 3 * GetGameSpeed()); // start timer loop, 3 seconds


  
  
  //annoying fixes related to using left click to start the game
   gameStarted = true;
   
   	
   cSkinner.SetAsPlayer();	
   cScroller.ChangeRoom(3, 30, -100);	
   
      	
   #ifdef DEBUG	
   {	
     player.Say("Game is in DEBUG mode. Don't forget to disable this (in General Settings) before release!");	
   }
   #endif
   
   //display OS int (2 = Windows, 8 = Web)
   //player.Say(String.Format("%d", System.OperatingSystem));
}

function room_Load()
{
  
  //stupid fix	
  cScroller.y = -100;	
     
     
  aFire.Stop();
  
//aFire_Quiet.Stop();

  /*
         if (fireChannel)
         {
         fireChannel.Stop();
         }*/

  
if (player.PreviousRoom == 4) //if skinner just came from the kitchen, the door should be open
{
  oKitchenDoor.Visible = true;
}
}


function room_AfterFadeIn()
{ 
if (player.PreviousRoom == 4) //if skinner just came from the kitchen, the door should quickly close
{
  oKitchenDoor.Visible = false;
}

}




function hFrontDoor_AnyClick()
{   
  if (Verbs.MovePlayer(45, 107)) { //get as close to the coords as possible
    
    player.FaceDirection(eDirectionLeft);
    
    // Walk To (does nothing)
    if(Verbs.UsedAction(eGA_WalkTo)) {
    }

    // Look At
    else if(Verbs.UsedAction(eGA_LookAt)) {
      GenericResponse(eResponse_Hmm);
    }

    // Open/Push/Pull/Use
    else if(Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use)) {
      
      if (ChalmersInHouse) {
      GenericResponse(eResponse_WontLeave);
      }
      
      else
      {
            
      ChalmersInHouse = true;
      
      StartCutscene(eSkipESCOrRightButton);

       //hide the ui
      gAction.Visible = false;
      gMain.Visible = false;
      mouse.Visible = false;
  
  
      //disable Chalmer's timer
      SetTimer(1, 0);
      
      aOpendoor.Play();
      oFrontDoor.Visible = true;
      player.LockView(VSKINNER_PICKUP_MED);
      player.Animate(eDirectionLeft, 4, eOnce, eBlock);
      player.UnlockView();
      player.Walk(54, 109, eBlock);
      player.FaceCharacter(cChalmers, eBlock);
      

      Wait(10);
      

      cChalmers.x = 21;
      cChalmers.y = 109;
      cChalmers.FaceDirection(eDirectionRight);

      Wait(20);

      cChalmers.SayAt(0, 40, 165,  "&1 Well Seymour, I made it...");
      
      //Wait(2);
      
      cChalmers.SayAt(0, 40, 160,  "&2 Despite your directions.");

      Wait(10);
      
      player.SayAt(0, 40, 210,  "&1 Ahhh, Superintendent Chalmers!");
      
      Wait(10);

      player.Say("&2 Welcome!");
            
       Wait(20);
        
      player.SayAt(0, 40, 200,  "&3 I hope you're prepared for an unforgettable luncheon!");

      Wait(15);

      cChalmers.Say("&3 Nyeh.");
      //cChalmers.Say("&3 Yeah.");

       player.Walk(238, 120, eNoBlock, eAnywhere);
       
       Wait(26); //important!! delay has to end with 6 or the walking speeds desync and create a nasty artifact when scrolling
       
       cChalmers.Walk(130, 111, eBlock, eAnywhere);
       cChalmers.Walk(126, 109, eBlock, eAnywhere);
       
       cChalmers.Baseline = 5;
       cChalmers.LockView(VCHALMERS_SIT);
       oTableLeft.Visible = true;
       cChalmers.Animate(0, 3, eOnce, eNoBlock);      
 
       player.Walk(238, 109, eBlock, eAnywhere); 
     
       oKitchenDoor.Visible = true;
       player.LockView(VSKINNER_DOOR);
       player.Animate(eDirectionRight, 4, eOnce, eBlock);
       player.UnlockView();
       aSwingdoor.Play();
               
       //silently close the front door for later use       
       oFrontDoor.Visible = false;
       

        
       Wait(10);
       

       
       player.ChangeRoom(4, 24, 109, eDirectionRight);
       oKitchenDoor.Visible = false;

       //get chalmers ready for any future conversations
       cChalmers.SpeechView = VCHALMERS_SIT_TALK;
       cChalmers.ChangeView(VCHALMERS_SIT_IDLE);
       cChalmers.UnlockView();
       
       EndCutscene();
              
       //unhide the ui
       gAction.Visible = true;
       gMain.Visible = true;
       mouse.Visible = true;
  
      }
    }
   
       // Pickup
    else if(Verbs.UsedAction(eGA_PickUp)) {
      GenericResponse(eResponse_Impossible);
    }
    
    // Close/Use With (UseInv)
    else if(Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_UseInv)) {
     
     //debug shortcut to jump to the final scene
      #ifdef DEBUG
         //hide the ui
        gAction.Visible = false;
        gMain.Visible = false;
        player.ChangeRoom(5);
      #endif
      
      #ifndef DEBUG
        GenericResponse(eResponse_No);
      #endif
    }




    // Talk To
    else if(Verbs.UsedAction(eGA_TalkTo)) {
      GenericResponse(eResponse_Talk);
    }
    
    // any other verb
    else {
      GenericResponse(eResponse_Uhh);
    }
  }  
}



function hKitchenDoor_AnyClick()
{      
    if (Verbs.MovePlayer(234, 110)) { //get as close to the coords as possible
      
      player.FaceDirection(eDirectionRight);
      
      // Look At
      if(Verbs.UsedAction(eGA_LookAt)) {
        GenericResponse(eResponse_Hmm);
      }

      // Open/Push/Pull/Use/Walk To
      else if(Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use)|| Verbs.UsedAction(eGA_WalkTo)) {
      
      
        //if (!ChalmersInHouse) { //chalmers hasn't entered the house yet
         // if(!Verbs.UsedAction(eGA_WalkTo)) //the player wasn't just trying to WALK to the door
         // {
         /// player.Say("&55 I'm right where I want to be."); //say a voiceline to indicate the door needs to be opened first
         // }
        //}    
        //else
        //{
          
          
      player.Walk(238, 109, eBlock, eAnywhere); 
     
      oKitchenDoor.Visible = true;
      player.LockView(VSKINNER_DOOR);
      player.Animate(eDirectionRight, 4, eOnce, eBlock);
      player.UnlockView();
      aSwingdoor.Play();
      
      Wait(10);
      
      player.ChangeRoom(4, 24, 109, eDirectionRight);
      oKitchenDoor.Visible = false;
       // }
      }

    // Pickup
    else if(Verbs.UsedAction(eGA_PickUp)) {
      GenericResponse(eResponse_Impossible);
    }
    
    
    // Close/Use With (UseInv)
    else if(Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_UseInv)) {
     
        GenericResponse(eResponse_No);
    }

      // Talk To
      else if(Verbs.UsedAction(eGA_TalkTo)) {
        GenericResponse(eResponse_Talk);
      }
      
      // any other verb
      else {
        GenericResponse(eResponse_Uhh);
      }
    }  
  }



function room_RepExec()
{
  if (IsTimerExpired(1)) {   
    aDoorbell.Play();
    cChalmers.SayBackground("DING DONG");
    SetTimer(1, (Random(3) + 7) * GetGameSpeed());  // restart timer, 7 to 10 seconds
  }
}




function hFakeDoor_AnyClick()
{
    if (Verbs.MovePlayer(78, 100)) {
      
      // Walk To (does nothing)
      if(Verbs.UsedAction(eGA_WalkTo)) {
      }

      // Look At
      else if(Verbs.UsedAction(eGA_LookAt)) {
        GenericResponse(eResponse_Hmm);
      }

      // Open/Push/Pull/Use
      else if(Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use)) {
        
        if (!ChalmersInHouse) { //chalmers hasn't entered the house yet
          player.Say("&55 I'm right where I want to be."); //say a voiceline to indicate the door needs to be opened first  
        }    
        else
        {
          player.Say("&49 I'm afraid we're stuck here for the duration.");
          iResponse_WontLeave_Selection = 1; //set it so we don't hear this line again straight away when cycling through "i dont want to leave" lines
        }
      }

    // Pickup
    else if(Verbs.UsedAction(eGA_PickUp)) {
      GenericResponse(eResponse_Impossible);
    }
    
    // Close/Use With (UseInv)
    else if(Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_UseInv)) {
     
        GenericResponse(eResponse_No);
    }

    // Talk To
    else if(Verbs.UsedAction(eGA_TalkTo)) {
      GenericResponse(eResponse_Talk);
    }
    
    // any other verb
    else {
      GenericResponse(eResponse_Uhh);
    }
  }
}


function hPainting_AnyClick()
{
  if (Verbs.MovePlayer(167, 116)) {
    
    // Walk To (does nothing)
    if(Verbs.UsedAction(eGA_WalkTo)) {
    }

    // Look At
    else if(Verbs.UsedAction(eGA_LookAt)) {
      GenericResponse(eResponse_Hmm);
    }
    
    // Use/Push/Pull/Open/Close/Pickup/Use With (UseInv)
    else if(Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_PickUp) || Verbs.UsedAction(eGA_UseInv)) {
      GenericResponse(eResponse_No);
    }

    // Talk To
    else if(Verbs.UsedAction(eGA_TalkTo)) {
      GenericResponse(eResponse_Talk);
    }
    
    // any other verb
    else {
      GenericResponse(eResponse_Uhh);
    }
  }  
}

  

function hLeftChair_AnyClick()
{
  if (Verbs.MovePlayer(117, 114)) {
    
    // Walk To (does nothing)
    if(Verbs.UsedAction(eGA_WalkTo)) {
    }

    // Look At
    else if(Verbs.UsedAction(eGA_LookAt)) {
      GenericResponse(eResponse_Hmm);
    }
    
    // Use/Push/Pull/Open/Close/Pickup/Use With (UseInv)
    else if(Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_PickUp) || Verbs.UsedAction(eGA_UseInv)) {
      GenericResponse(eResponse_No);
    }

    // Talk To
    else if(Verbs.UsedAction(eGA_TalkTo)) {
      GenericResponse(eResponse_Talk);
    }
    
    // any other verb
    else {
      GenericResponse(eResponse_Uhh);
    }
  }  
}



function hRightChair_AnyClick()
{
  if (Verbs.MovePlayer(217, 114)) {
    
    // Walk To (does nothing)
    if(Verbs.UsedAction(eGA_WalkTo)) {
    }

    // Look At
    else if(Verbs.UsedAction(eGA_LookAt)) {
      GenericResponse(eResponse_Hmm);
    }
    
    // Use/Push/Pull/Open/Close/Pickup/Use With (UseInv)
    else if(Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_PickUp) || Verbs.UsedAction(eGA_UseInv)) {
      GenericResponse(eResponse_No);
    }

    // Talk To
    else if(Verbs.UsedAction(eGA_TalkTo)) {
      GenericResponse(eResponse_Talk);
    }
    
    // any other verb
    else {
      GenericResponse(eResponse_Uhh);
    }
  }
}









function hTable_AnyClick()
{
  //USE INV (check for this BEFORE any player movements, as it's an alternate position from the standard table position)
  if(Verbs.UsedAction(eGA_UseInv)) {
    if (player.ActiveInventory==iBurger) {    
       StartTableConversation();
    }
  }
  
  else
    {

    if (Verbs.MovePlayer(165, 116)) {
      
      // Walk To (does nothing)
      if(Verbs.UsedAction(eGA_WalkTo)) {
      }

      // Look At
      else if(Verbs.UsedAction(eGA_LookAt)) {
        GenericResponse(eResponse_Hmm);
      }
      
      // Use/Push/Pull/Open/Close/Pickup
      else if(Verbs.UsedAction(eGA_Push) || Verbs.UsedAction(eGA_Pull) || Verbs.UsedAction(eGA_Use) || Verbs.UsedAction(eGA_Open) || Verbs.UsedAction(eGA_Close) || Verbs.UsedAction(eGA_PickUp)) {
        GenericResponse(eResponse_No);
      }
          
      // Talk To
      else if(Verbs.UsedAction(eGA_TalkTo)) {
        GenericResponse(eResponse_Talk);
      }
      
      // any other verb
      else {
        GenericResponse(eResponse_Uhh);
      }
    }
  }
}





